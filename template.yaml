AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Common AWS Infrastructure

Parameters:
  Stage:
    Type: String
  RtRegion:
    Type: String

Globals:
  Function:
    Timeout: 30    
    MemorySize: 1024

    LoggingConfig:
      LogFormat: JSON

    Environment:
      Variables:
        Stage: !Ref Stage
        RtRegion: !Ref RtRegion

Resources:
  UserAuthenticatedTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub Splitsies-UserAuthenticated-${Stage}
      DisplayName: !Sub Splitsies-UserAuthenticated-${Stage}

  WarmServicesFunction:
    Type: AWS::Serverless::Function
    Properties: 
      CodeUri: ./src
      Handler: handler.main
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Role: !GetAtt WarmServicesLambdaExecutionRole.Arn
      Events:
        SNSTrigger:
          Type: SNS
          Properties:
            Topic: !Ref UserAuthenticatedTopic 
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      SourcesContent: true
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - functions/warm-services/handler.ts
        External:
        - node_modules
        - aws-sdk
        - .esbuild
        - .github
  
  # IAM Role for Lambda to allow invocation by SNS
  WarmServicesLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaSNSInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Permissions to create and manage logs
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
                              
              # Permission for the Lambda function to invoke other Lambda functions
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: arn:aws:lambda:*:*:function:*

              # Allow Lambda to receive SNS messages
              - Effect: Allow
                Action: sns:Publish
                Resource: !Ref UserAuthenticatedTopic

Outputs:
  SNSTopicArn:
    Description: ARN of the UserAuthenticatedTopic
    Value: !Ref UserAuthenticatedTopic
  LambdaFunctionArn:
    Description: ARN of the WarmServicesFunction
    Value: !GetAtt WarmServicesFunction.Arn
  WarmServicesLambdaExecutionRoleArn:
    Description: ARN of the WarmServicesLambdaExecutionRole
    Value: !GetAtt WarmServicesLambdaExecutionRole.Arn